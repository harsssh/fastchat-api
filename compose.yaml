services:
  controller:
    container_name: controller
    restart: always
    deploy:
      update_config:
        failure_action: rollback
        monitor: 30s
        order: start-first
    build:
      context: .
      dockerfile: Dockerfile
    image: fastchat:latest
    env_file:
      - .env
    volumes:
      - ./scripts:/app/scripts
    entrypoint:
      - "bash"
      - "/app/scripts/run_controller.sh"
  model-worker:
    container_name: model-worker
    restart: always
    depends_on:
      - controller
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - /model/kemizuki/huggingface:/root/.cache/huggingface
      - ./scripts:/app/scripts
    image: fastchat:latest
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
      update_config:
        failure_action: rollback
        monitor: 30s
        order: start-first
    entrypoint:
      - "bash"
      - "/app/scripts/run_vllm_workers.sh"
  api-server:
    container_name: api-server
    restart: always
    depends_on:
      - controller
      - model-worker
    deploy:
      update_config:
        failure_action: rollback
        monitor: 30s
        order: start-first
    build:
      context: .
      dockerfile: Dockerfile
    image: fastchat:latest
    env_file:
      - .env
    volumes:
      - ./scripts:/app/scripts
    entrypoint:
      - "bash"
      - "/app/scripts/run_api.sh"
  nginx:
    image: nginx:1.26
    restart: always
    deploy:
      update_config:
        failure_action: rollback
        monitor: 30s
        order: start-first
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./allowip.conf:/etc/nginx/allowip.conf
    depends_on:
      - api-server
